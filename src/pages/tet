v// components/Sidebar.jsx



// components/Header.jsx
import { useState, useRef, useEffect } from 'react';
import NotificationPanel from './NotificationPanel';
import ProfileMenu from './ProfileMenu';

export default function Header({ isScrolled, onLogout }) {
  const [showNotifications, setShowNotifications] = useState(false);
  const [showProfileMenu, setShowProfileMenu] = useState(false);
  const notificationsRef = useRef(null);
  const profileRef = useRef(null);

  const notifications = [
    { text: 'Nouvelle plainte reçue', time: 'Il y a 5 min', read: false },
    { text: '2 réponses en attente', time: 'Il y a 1h', read: true },
    { text: 'Nouvel utilisateur inscrit', time: 'Il y a 2h', read: true },
  ];

  const toggleNotifications = () => {
    setShowNotifications(!showNotifications);
    if (showProfileMenu) setShowProfileMenu(false);
  };

  const toggleProfileMenu = () => {
    setShowProfileMenu(!showProfileMenu);
    if (showNotifications) setShowNotifications(false);
  };

  useEffect(() => {
    const handleClickOutside = (event) => {
      if (notificationsRef.current && !notificationsRef.current.contains(event.target)) {
        setShowNotifications(false);
      }
      if (profileRef.current && !profileRef.current.contains(event.target)) {
        setShowProfileMenu(false);
      }
    };

    document.addEventListener('mousedown', handleClickOutside);
    return () => document.removeEventListener('mousedown', handleClickOutside);
  }, []);

  return (
    <header
      className={`bg-white shadow-sm px-6 py-2 flex items-center justify-between sticky top-0 z-20 transition-all duration-300 ${
        isScrolled ? 'shadow-md bg-opacity-90 backdrop-blur-sm' : ''
      }`}
    >
      <div className="flex items-center">
        <h1 className="text-xl font-bold text-gray-800 hidden md:block">
          Tableau de bord
        </h1>
      </div>

      <div className="flex items-center space-x-6">
        <div className="relative hidden md:block">
          <div className="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <i className="fas fa-search text-gray-400"></i>
          </div>
          <input
            type="text"
            placeholder="Rechercher..."
            className="pl-10 pr-4 py-2 border border-gray-300 rounded-full text-sm text-gray-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-all duration-300 w-64 focus:w-72"
          />
        </div>

        <div ref={notificationsRef} className="relative">
          <button
            onClick={toggleNotifications}
            className="relative text-gray-500 hover:text-gray-700 focus:outline-none transition-colors duration-200"
          >
            <div className="relative">
              <i className="fas fa-bell text-xl"></i>
              <span className="absolute -top-1 -right-1 bg-red-500 text-white rounded-full text-xs w-5 h-5 flex items-center justify-center animate-pulse-slow">
                {notifications.filter(n => !n.read).length}
              </span>
            </div>
          </button>
          {showNotifications && (
            <NotificationPanel notifications={notifications} />
          )}
        </div>

        <div ref={profileRef} className="relative">
          <button
            onClick={toggleProfileMenu}
            className="flex items-center focus:outline-none group"
          >
            <div className="relative">
              <img
                src="/4e00cfd7749b398faba7f21425b3b833.jpg"
                alt="User avatar"
                className="w-9 h-9 rounded-full object-cover border-2 border-transparent group-hover:border-blue-500 transition-all duration-300"
              />
              <span className="absolute bottom-0 right-0 w-3 h-3 bg-green-500 rounded-full border-2 border-white"></span>
            </div>
            <span className="ml-2 hidden md:inline-flex items-center">
              <span className="text-gray-700 font-medium mr-1">Admin</span>
              <i className="fas fa-chevron-down text-xs text-gray-500"></i>
            </span>
          </button>
          
          {showProfileMenu && (
            <ProfileMenu onLogout={onLogout} />
          )}
        </div>
      </div>
    </header>
  );
}

// components/NotificationPanel.jsx
export default function NotificationPanel({ notifications }) {
  return (
    <div className="absolute right-0 mt-2 w-80 bg-white rounded-lg shadow-xl border border-gray-200 text-gray-700 z-30 animate-in fade-in-0 zoom-in-95">
      <div className="px-4 py-3 border-b border-gray-200 flex justify-between items-center">
        <h3 className="font-semibold text-gray-800">Notifications</h3>
        <button className="text-xs text-blue-600 hover:text-blue-800">
          Tout marquer comme lu
        </button>
      </div>
      <ul className="max-h-96 overflow-y-auto">
        {notifications.map((note, i) => (
          <li
            key={i}
            className={`px-4 py-3 hover:bg-gray-50 border-b border-gray-100 last:border-none transition-colors duration-150 flex ${
              !note.read ? 'bg-blue-50' : ''
            }`}
          >
            <div className={`w-2 h-2 rounded-full mt-2 flex-shrink-0 ${
              !note.read ? 'bg-blue-500' : 'bg-transparent'
            }`}></div>
            <div className="ml-3">
              <p className="text-sm font-medium text-gray-800">{note.text}</p>
              <p className="text-xs text-gray-500 mt-1">{note.time}</p>
            </div>
          </li>
        ))}
      </ul>
      <div className="px-4 py-2 border-t border-gray-200 text-center">
        <button className="text-sm text-blue-600 hover:text-blue-800 font-medium">
          Voir toutes les notifications
        </button>
      </div>
    </div>
  );
}

// components/ProfileMenu.jsx
export default function ProfileMenu({ onLogout }) {
  return (
    <div className="absolute right-0 mt-2 w-56 bg-white rounded-lg shadow-xl border border-gray-200 text-gray-700 z-30 animate-in fade-in-0 zoom-in-95">
      <div className="px-4 py-3 border-b border-gray-200">
        <p className="font-semibold text-gray-800">Admin User</p>
        <p className="text-xs text-gray-500">administrateur@gmail.com</p>
      </div>
      <ul>
        <li>
          <a
            href="#"
            className="block px-4 py-2.5 text-sm hover:bg-gray-50 transition-colors duration-150 flex items-center"
          >
            <i className="fas fa-user-circle text-gray-500 mr-3 w-5 text-center"></i>
            Mon profil
          </a>
        </li>
        <li>
          <a
            href="#"
            className="block px-4 py-2.5 text-sm hover:bg-gray-50 transition-colors duration-150 flex items-center"
          >
            <i className="fas fa-cog text-gray-500 mr-3 w-5 text-center"></i>
            Paramètres
          </a>
        </li>
        <li className="border-t border-gray-200">
          <button
            onClick={onLogout}
            className="block w-full text-left px-4 py-2.5 text-sm hover:bg-gray-50 text-red-600 transition-colors duration-150 flex items-center"
          >
            <i className="fas fa-sign-out-alt text-red-500 mr-3 w-5 text-center"></i>
            Déconnexion
          </button>
        </li>
      </ul>
    </div>
  );
}

// components/StatCard.jsx
export default function StatCard({ card, index, isHovering, onHover, onLeave }) {
  return (
    <div 
      className={`bg-white rounded-xl shadow-sm p-5 transition-all duration-300 hover:shadow-md transform hover:-translate-y-1 ${
        isHovering === index ? 'ring-2 ring-blue-500' : ''
      }`}
      onMouseEnter={() => onHover(index)}
      onMouseLeave={onLeave}
    >
      <div className="flex justify-between">
        <div className={`bg-${card.color}-100 w-12 h-12 rounded-lg flex items-center justify-center`}>
          <i className={`fas ${card.icon} text-${card.color}-500 text-xl`}></i>
        </div>
        <div className={`text-xs font-medium ${
          card.trend === 'up' ? 'text-green-600' : 'text-red-600'
        }`}>
          {card.change} {card.trend === 'up' ? '↑' : '↓'}
        </div>
      </div>
      <div className="mt-4">
        <h3 className="text-sm font-medium text-gray-500">{card.title}</h3>
        <p className="text-2xl font-semibold text-gray-800 mt-1">{card.value}</p>
      </div>
    </div>
  );
}

// components/ChartSection.jsx
import { Line, Doughnut, Bar } from 'react-chartjs-2';

export default function ChartSection({ complaintsData, statusData, sectorData }) {
  return (
    <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
      <div className="bg-white rounded-xl shadow-sm p-5 transition-all duration-300 hover:shadow-md">
        <div className="flex justify-between items-center mb-5">
          <h2 className="text-lg font-semibold text-gray-800">Plaintes reçues vs résolues</h2>
          <select className="text-sm border border-gray-300 rounded-lg px-3 py-1 focus:outline-none focus:ring-2 focus:ring-blue-500">
            <option>Cette semaine</option>
            <option>Ce mois</option>
            <option>Cette année</option>
          </select>
        </div>
        <div className="h-80">
          <Line 
            data={complaintsData} 
            options={{
              responsive: true,
              maintainAspectRatio: false,
              animation: {
                duration: 1500,
                easing: 'easeInOutQuart'
              },
              plugins: {
                legend: {
                  position: 'top',
                  labels: {
                    font: { size: 13 },
                    usePointStyle: true,
                  }
                },
                tooltip: {
                  mode: 'index',
                  intersect: false,
                }
              },
              scales: {
                y: {
                  beginAtZero: true,
                  grid: { drawBorder: false }
                },
                x: {
                  grid: { display: false }
                }
              }
            }}
          />
        </div>
      </div>

      <div className="bg-white rounded-xl shadow-sm p-5 transition-all duration-300 hover:shadow-md">
        <h2 className="text-lg font-semibold text-gray-800 mb-5">État des plaintes</h2>
        <div className="h-80 flex items-center justify-center">
          <Doughnut 
            data={statusData} 
            options={{
              responsive: true,
              maintainAspectRatio: false,
              animation: {
                duration: 1500,
                easing: 'easeInOutQuart'
              },
              plugins: {
                legend: {
                  position: 'right',
                  labels: {
                    font: { size: 13 },
                    usePointStyle: true,
                    padding: 20
                  }
                },
                tooltip: {
                  callbacks: {
                    label: function(context) {
                      const label = context.label || '';
                      const value = context.raw || 0;
                      const total = context.dataset.data.reduce((a, b) => a + b, 0);
                      const percentage = Math.round((value / total) * 100);
                      return `${label}: ${value} (${percentage}%)`;
                    }
                  }
                }
              },
              cutout: '70%',
            }}
          />
        </div>
      </div>

      <div className="bg-white rounded-xl shadow-sm p-5 transition-all duration-300 hover:shadow-md lg:col-span-2">
        <div className="flex justify-between items-center mb-5">
          <h2 className="text-lg font-semibold text-gray-800">Plaintes par secteur</h2>
          <div className="flex space-x-2">
            <button className="text-sm bg-blue-50 text-blue-600 px-3 py-1 rounded-lg hover:bg-blue-100 transition-colors duration-200">
              Export
            </button>
            <button className="text-sm bg-gray-50 text-gray-600 px-3 py-1 rounded-lg hover:bg-gray-100 transition-colors duration-200">
              Voir tout
            </button>
          </div>
        </div>
        <div className="h-80">
          <Bar 
            data={sectorData} 
            options={{
              responsive: true,
              maintainAspectRatio: false,
              animation: {
                duration: 1500,
                easing: 'easeInOutQuart'
              },
              plugins: {
                legend: { display: false },
                tooltip: {
                  callbacks: {
                    label: function(context) {
                      return `${context.dataset.label}: ${context.raw}`;
                    }
                  }
                }
              },
              scales: {
                y: {
                  beginAtZero: true,
                  grid: { drawBorder: false }
                },
                x: {
                  grid: { display: false }
                }
              }
            }}
          />
        </div>
      </div>
    </div>
  );
}

// components/ComplaintsTable.jsx
export default function ComplaintsTable({ complaints }) {
  const getStatusColor = (status) => {
    switch (status) {
      case 'Résolue': return 'bg-green-100 text-green-800';
      case 'En traitement': return 'bg-blue-100 text-blue-800';
      case 'En attente': return 'bg-amber-100 text-amber-800';
      case 'Rejetée': return 'bg-red-100 text-red-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  const getPriorityColor = (priority) => {
    switch (priority) {
      case 'high': return 'bg-red-500';
      case 'medium': return 'bg-yellow-500';
      case 'low': return 'bg-green-500';
      default: return 'bg-gray-500';
    }
  };

  return (
    <div className="bg-white rounded-xl shadow-sm p-5 transition-all duration-300 hover:shadow-md">
      <div className="flex justify-between items-center mb-5">
        <h2 className="text-lg font-semibold text-gray-800">Dernières plaintes</h2>
        <button className="text-sm text-blue-600 hover:text-blue-800 font-medium flex items-center transition-colors duration-200">
          Voir toutes les plaintes
          <i className="fas fa-arrow-right ml-2"></i>
        </button>
      </div>
      <div className="overflow-x-auto">
        <table className="min-w-full divide-y divide-gray-200">
          <thead className="bg-gray-50">
            <tr>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Type</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Secteur</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Statut</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
              <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Priorité</th>
              <th className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
            </tr>
          </thead>
          <tbody className="bg-white divide-y divide-gray-200">
            {complaints.map((complaint, index) => (
              <tr key={index} className="hover:bg-gray-50 transition-colors duration-150">
                <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                  {complaint.id}
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  {complaint.type}
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  {complaint.sector}
                </td>
                <td className="px-6 py-4 whitespace-nowrap">
                  <span className={`px-2 py-1 text-xs font-medium rounded-full ${getStatusColor(complaint.status)}`}>
                    {complaint.status}
                  </span>
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                  {complaint.date}
                </td>
                <td className="px-6 py-4 whitespace-nowrap">
                  <div className="flex items-center">
                    <span className={`w-3 h-3 rounded-full ${getPriorityColor(complaint.priority)} mr-2`}></span>
                    <span className="text-sm text-gray-500 capitalize">{complaint.priority}</span>
                  </div>
                </td>
                <td className="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                  <button className="text-blue-600 hover:text-blue-900 mr-3 transition-colors duration-200">
                    <i className="fas fa-eye"></i>
                  </button>
                  <button className="text-gray-600 hover:text-gray-900 transition-colors duration-200">
                    <i className="fas fa-ellipsis-v"></i>
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
  );
}

// components/LogoutModal.jsx
export default function LogoutModal({ show, onConfirm, onCancel }) {
  if (!show) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 backdrop-blur-sm">
      <div className="bg-white rounded-xl shadow-xl p-6 max-w-sm w-full transform transition-all duration-300 animate-in fade-in-0 zoom-in-95">
        <div className="flex items-center justify-center w-12 h-12 mx-auto bg-red-100 rounded-full mb-4">
          <i className="fas fa-sign-out-alt text-red-600 text-xl"></i>
        </div>
        <h3 className="text-lg font-semibold text-center text-gray-800 mb-2">Confirmer la déconnexion</h3>
        <p className="text-gray-600 text-center mb-6">Êtes-vous sûr de vouloir vous déconnecter ?</p>
        <div className="flex justify-center space-x-4">
          <button
            onClick={onCancel}
            className="px-5 py-2 border border-gray-300 rounded-lg hover:bg-gray-50 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-gray-200"
          >
            Annuler
          </button>
          <button
            onClick={onConfirm}
            className="px-5 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors duration-200 transform hover:scale-[1.02] focus:outline-none focus:ring-2 focus:ring-red-300"
          >
            Se déconnecter
          </button>
        </div>
      </div>
    </div>
  );
}